name: Update Crypto-Stock Data

on:
  schedule:
    # Run every Sunday at 23:59 UTC (weekly update)
    - cron: '59 23 * * 0'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  actions: write

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Ensure full git history
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run ETL Pipeline
      timeout-minutes: 10  # Set explicit timeout
      run: |
        set -e  # Exit on error
        echo "Starting ETL pipeline at $(date)"
        python etl_lite.py || {
          echo "ETL pipeline failed at $(date)" 
          echo "Checking for partial data..."
          if [ -f "public/data/weekly_stats.json" ]; then
            echo "Partial data found, continuing with commit"
          else
            echo "No data generated, exiting"
            exit 1
          fi
        }
        echo "ETL pipeline completed at $(date)"
      env:
        # Add any API keys here if needed
        # COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Check for changes
      id: git-check
      run: |
        git diff --exit-code public/data/ || echo "changes=true" >> $GITHUB_OUTPUT
    
    - name: Sync with remote and push changes
      if: steps.git-check.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 先拉取遠程更改以避免衝突，使用當前分支
        CURRENT_BRANCH=${GITHUB_REF_NAME:-main}
        echo "Syncing with remote repository on branch: $CURRENT_BRANCH"
        
        # 配置安全目錄
        git config --global --add safe.directory $GITHUB_WORKSPACE
        
        # 更新遠程引用
        git fetch origin $CURRENT_BRANCH
        
        # 嘗試合併遠程更改
        git pull --no-rebase origin $CURRENT_BRANCH || {
          echo "Pull failed, trying to resolve conflicts..."
          # 如果有衝突，重置到遠程狀態並重新應用我們的更改
          git reset --hard origin/$CURRENT_BRANCH
        }
        
        # 檢查是否仍有變更需要提交
        if git diff --exit-code public/data/; then
          echo "No changes to commit after sync"
          exit 0
        fi
        
        # 添加和提交更改
        git add public/data/
        git commit -m "🤖 Update weekly crypto-stock data

        - Updated stock prices from Yahoo Finance
        - Updated crypto prices from CoinGecko  
        - Generated at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        
        Co-authored-by: Claude <noreply@anthropic.com>" || {
          echo "No changes to commit"
          exit 0
        }
        
        # 推送更改，帶重試機制
        for i in {1..3}; do
          echo "Push attempt $i/3..."
          if git push; then
            echo "✅ Push successful"
            break
          else
            echo "❌ Push failed, attempt $i/3"
            if [ $i -lt 3 ]; then
              echo "Syncing again and retrying..."
              sleep 10
              git pull --rebase origin $CURRENT_BRANCH || git pull --no-rebase origin $CURRENT_BRANCH
            else
              echo "💥 Push failed after 3 attempts"
              exit 1
            fi
          fi
        done
    
    - name: Deploy to Vercel (if configured)
      if: steps.git-check.outputs.changes == 'true'
      run: |
        echo "Data updated, Vercel will auto-deploy on push"
        
    - name: Create summary comment
      if: steps.git-check.outputs.changes == 'true'  
      run: |
        echo "## 📊 Weekly Data Update Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Updated Files:" >> $GITHUB_STEP_SUMMARY
        echo "- \`public/data/weekly_stats.json\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`public/data/summary.json\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Data Sources:" >> $GITHUB_STEP_SUMMARY
        echo "- 📈 Stock prices: Yahoo Finance" >> $GITHUB_STEP_SUMMARY
        echo "- 🪙 Crypto prices: CoinGecko API" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "- Dashboard will auto-update with new data" >> $GITHUB_STEP_SUMMARY
        echo "- Vercel deployment triggered automatically" >> $GITHUB_STEP_SUMMARY